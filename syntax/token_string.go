// Code generated by "stringer -type token -linecomment -trimprefix _"; DO NOT EDIT.

package syntax

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[illegalTok-0]
	_ = x[_EOF-1]
	_ = x[_Newl-2]
	_ = x[_Lit-3]
	_ = x[_LitWord-4]
	_ = x[_LitRedir-5]
	_ = x[sglQuote-6]
	_ = x[dblQuote-7]
	_ = x[bckQuote-8]
	_ = x[and-9]
	_ = x[andAnd-10]
	_ = x[orOr-11]
	_ = x[or-12]
	_ = x[orAnd-13]
	_ = x[dollar-14]
	_ = x[dollSglQuote-15]
	_ = x[dollDblQuote-16]
	_ = x[dollBrace-17]
	_ = x[dollBrack-18]
	_ = x[dollParen-19]
	_ = x[dollDblParen-20]
	_ = x[leftBrack-21]
	_ = x[dblLeftBrack-22]
	_ = x[leftParen-23]
	_ = x[dblLeftParen-24]
	_ = x[rightBrace-25]
	_ = x[rightBrack-26]
	_ = x[rightParen-27]
	_ = x[dblRightParen-28]
	_ = x[semicolon-29]
	_ = x[dblSemicolon-30]
	_ = x[semiAnd-31]
	_ = x[dblSemiAnd-32]
	_ = x[semiOr-33]
	_ = x[exclMark-34]
	_ = x[tilde-35]
	_ = x[addAdd-36]
	_ = x[subSub-37]
	_ = x[star-38]
	_ = x[power-39]
	_ = x[equal-40]
	_ = x[nequal-41]
	_ = x[lequal-42]
	_ = x[gequal-43]
	_ = x[addAssgn-44]
	_ = x[subAssgn-45]
	_ = x[mulAssgn-46]
	_ = x[quoAssgn-47]
	_ = x[remAssgn-48]
	_ = x[andAssgn-49]
	_ = x[orAssgn-50]
	_ = x[xorAssgn-51]
	_ = x[shlAssgn-52]
	_ = x[shrAssgn-53]
	_ = x[andBoolAssgn-54]
	_ = x[orBoolAssgn-55]
	_ = x[xorBoolAssgn-56]
	_ = x[powAssgn-57]
	_ = x[rdrOut-58]
	_ = x[appOut-59]
	_ = x[rdrIn-60]
	_ = x[rdrInOut-61]
	_ = x[dplIn-62]
	_ = x[dplOut-63]
	_ = x[clbOut-64]
	_ = x[hdoc-65]
	_ = x[dashHdoc-66]
	_ = x[wordHdoc-67]
	_ = x[rdrAll-68]
	_ = x[appAll-69]
	_ = x[cmdIn-70]
	_ = x[cmdOut-71]
	_ = x[plus-72]
	_ = x[colPlus-73]
	_ = x[minus-74]
	_ = x[colMinus-75]
	_ = x[quest-76]
	_ = x[colQuest-77]
	_ = x[assgn-78]
	_ = x[colAssgn-79]
	_ = x[perc-80]
	_ = x[dblPerc-81]
	_ = x[hash-82]
	_ = x[dblHash-83]
	_ = x[caret-84]
	_ = x[dblCaret-85]
	_ = x[comma-86]
	_ = x[dblComma-87]
	_ = x[at-88]
	_ = x[slash-89]
	_ = x[dblSlash-90]
	_ = x[colon-91]
	_ = x[tsExists-92]
	_ = x[tsRegFile-93]
	_ = x[tsDirect-94]
	_ = x[tsCharSp-95]
	_ = x[tsBlckSp-96]
	_ = x[tsNmPipe-97]
	_ = x[tsSocket-98]
	_ = x[tsSmbLink-99]
	_ = x[tsSticky-100]
	_ = x[tsGIDSet-101]
	_ = x[tsUIDSet-102]
	_ = x[tsGrpOwn-103]
	_ = x[tsUsrOwn-104]
	_ = x[tsModif-105]
	_ = x[tsRead-106]
	_ = x[tsWrite-107]
	_ = x[tsExec-108]
	_ = x[tsNoEmpty-109]
	_ = x[tsFdTerm-110]
	_ = x[tsEmpStr-111]
	_ = x[tsNempStr-112]
	_ = x[tsOptSet-113]
	_ = x[tsVarSet-114]
	_ = x[tsRefVar-115]
	_ = x[tsReMatch-116]
	_ = x[tsNewer-117]
	_ = x[tsOlder-118]
	_ = x[tsDevIno-119]
	_ = x[tsEql-120]
	_ = x[tsNeq-121]
	_ = x[tsLeq-122]
	_ = x[tsGeq-123]
	_ = x[tsLss-124]
	_ = x[tsGtr-125]
	_ = x[globQuest-126]
	_ = x[globStar-127]
	_ = x[globPlus-128]
	_ = x[globAt-129]
	_ = x[globExcl-130]
}

const _token_name = "illegalTokEOFNewlLitLitWordLitRedir'\"`&&&||||&$$'$\"${$[$($(([[[(((}])));;;;&;;&;|!~++--***==!=<=>=+=-=*=/=%=&=|=^=<<=>>=&&=||=^^=**=>>><<><&>&>|<<<<-<<<&>&>><(>(+:+-:-?:?=:=%%%###^^^,,,@///:-e-f-d-c-b-p-S-L-k-g-u-G-O-N-r-w-x-s-t-z-n-o-v-R=~-nt-ot-ef-eq-ne-le-ge-lt-gt?(*(+(@(!("

var _token_index = [...]uint16{0, 10, 13, 17, 20, 27, 35, 36, 37, 38, 39, 41, 43, 44, 46, 47, 49, 51, 53, 55, 57, 60, 61, 63, 64, 66, 67, 68, 69, 71, 72, 74, 76, 79, 81, 82, 83, 85, 87, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 117, 120, 123, 126, 129, 132, 133, 135, 136, 138, 140, 142, 144, 146, 149, 152, 154, 157, 159, 161, 162, 164, 165, 167, 168, 170, 171, 173, 174, 176, 177, 179, 180, 182, 183, 185, 186, 187, 189, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 243, 246, 249, 252, 255, 258, 261, 264, 267, 269, 271, 273, 275, 277}

func (i token) String() string {
	idx := int(i) - 0
	if i < 0 || idx >= len(_token_index)-1 {
		return "token(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _token_name[_token_index[idx]:_token_index[idx+1]]
}
